try  { import-module ActiveDirectory

#region whole script
#Danny's Clear folder script 
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
$CSForm = New-Object System.Windows.Forms.Form
$CSForm.Size = '300, 200'
$CSForm.Text = 'Clear Folder'
#$CSForm.ShowDialog()


$computerTextBox = New-Object System.Windows.Forms.TextBox
$computerTextBox.Location = '80,23'#'Position from left app side, Position from top of app bar'
$computerTextBox.Size = '150,23'
$computerTextBox.ReadOnly = $false
$CSForm.Controls.Add($computerTextBox)
#$CSForm.ShowDialog()

$computerLabelBox = New-Object System.Windows.Forms.Label
$computerLabelBox.Location = '10,23'
$computerLabelBox.Size = '70,70'
$computerLabelBox.Text = '  Computer:'
$CSForm.Controls.Add($computerLabelBox)
#$CSForm.ShowDialog()

$returnStatus = New-Object System.Windows.Forms.StatusBar
$returnStatus.Name = "StatusBar"
$returnStatus.Text = "Ready"
$CSForm.Controls.Add($returnStatus)
#$CSForm.ShowDialog()

$okButton = New-Object System.Windows.Forms.Button                                                     
$okButton.Text = 'Ok'
$okButton.Location = "23,100"
$okButton.Add_Click({

##----------------------To run in Virtual Lab/Enterprise environment 
if (Test-Connection $computerTextBox.Text -Quiet) {
$returnStatus.Text = "Ping Successful"
$returnStatus.Text = "Processing"
$Session = New-PSSession -ComputerName $computerTextBox.Text
Invoke-Command -Session $Session {(Remove-Item C:\Test\* -Recurse -force -Confirm:$false)}
$returnStatus.Text = "Complete"
} else {  $returnStatus.Text = "Computer Offline" }



##----------------------To test code on your computer/Non-enterprise environment
#if (Test-Connection $computerTextBox.Text -Quiet) {
#$returnStatus.Text = "Ping Successful"
#$returnStatus.Text = "Processing"
#Invoke-Command {(Remove-Item C:\Test\* -Recurse -force -Confirm:$false)}
#$returnStatus.Text = "Complete"
#} else {  $returnStatus.Text = "Computer Offline" }

})
$CSForm.Controls.Add($okButton)
$CSForm.AcceptButton = $okButton
#$CSForm.ShowDialog()


$contentcButton = New-Object System.Windows.Forms.Button
$contentcButton.Text = 'Clear'
$contentcButton.Location = "100,100"
$contentcButton.Add_Click({
$computerTextBox.Text = ""
$returnStatus.Text = "Ready"

})
$CSForm.Controls.Add($contentcButton)
#$CSForm.ContentcButton = $contentcButton
#$CSForm.ShowDialog()

$cancelButton = New-Object System.Windows.Forms.Button
$cancelButton.Text = 'Close'
$cancelButton.Location = "180,100"
$cancelButton.Add_Click({
$CSForm.Close()
})
$CSForm.Controls.Add($cancelButton)
$CSForm.CancelButton = $cancelButton
#$CSForm.ShowDialog()

$CSForm.ShowDialog()
#endregion

}

Catch
{
Remove-Variable * -ErrorAction SilentlyContinue; Remove-Module *;
$error.Clear(); 
[System.Windows.MessageBox]::Show('Error deleting powershell cache reopen powershell')
}
