#What this code does
#$path = Read-Host 'Enter the new directory name'
#Test-Path $path
#if(Test-Path $path) {
#Remove-Item $path
#}
#Test-Path $path
#endregion
#--------------------------------------------------------------------------------------------------------------Part 1 show form
#code to load region assembly into ps session for Prereqs
[reflection.assembly]::LoadWithPartialName("System.Windows.Forms") | Out-Null 

#Endregion

#Resion basic form
#we are creating the form here
#blank form
$basicForm = New-Object System.Windows.Forms.Form
$basicForm.ShowDialog()
#--------------------------------------------------------------------------------------------------------------------------------------Part 2 Add Textbox
#here we are creating the Form
#region reused code
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
#endregion
$folderForm = New-Object System.Windows.Forms.Form
#here we are creating the textbox
$pathTextBox = New-Object System.Windows.Forms.TextBox

#location of the textbox from the top left corner
$pathTextBox.Location = '23,23'   #23 over and 23 down
$pathTextBox.Size = '150,23' #size of the 

#to add the text box we use the .Controls.Add mehtod and give it the textbox object
$folderForm.Controls.Add($pathTextBox)

#next we show Dialog
#$folderForm.ShowDialog() #-------------uncomment to see part 2

#--------------------------------------------------------------------------------------------------------To create a button Part 3
#region reused code
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
#endregion
#creates button object
$selectButton = New-Object System.Windows.Forms.Button

#inputs button text
$selectButton.Text = "Select"

#sets positions of the button
$selectButton.Location = '196, 23' #196 over and 23 down

#Adds the object to the form via the Controls.Add() method
$folderForm.Controls.Add($selectButton)

#displays the button on the form
$folderForm.ShowDialog()


#--------------------------------------------------------------------------------------------------------Part 4 assign action to button
#Creating object
$folderBroswer = New-Object System.Windows.Forms.FolderBrowserDialog

#Add_Click will do this once clicked
$selectButton.Add_Click({ 
$folderBroswer.ShowDialog() #show folder dialog bring up file explorer to select a folder
$pathTextBox.Text = $folderBroswer.SelectedPath
})
$pathTextBox.ReadOnly = $true
#the Textbox becomes read only

#shows the Dialog/form 
$folderForm.ShowDialog()

#--------------------------------------------------------------------------------part 5 Remove folder button
#Creating a remove button

#creates button object
$removeButton = New-Object System.Windows.Forms.Button

#inputs button text
$removeButton.Text = "Remove"

#sets positions of the button
$removeButton.Location = '26, 52' #26 over and 52 down

#Here is the code that will run once it is clicked
$removeButton.Add_Click({
    If($folderBroswer.SelectedPath){
       If(Test-Path $folderBroswer.SelectedPath) {
          Remove-Item $folderBroswer.SelectedPath
                                                 }
                                    }
})

#Adds the object to the form via the Controls.Add() method
$folderForm.Controls.Add($removeButton)

#displays the button on the form
$folderForm.ShowDialog()

#---------------------------------------------------------------------Part 6 making okay and cancel button
#Creating the objects here
$okButton = New-Object System.Windows.Forms.Button
$cancelButton = New-Object Sysetm.Windows.Forms.Button

#sets location
$okButton.Text = 'OK'
$okButton.Location = "56.215"

#sets location
$cancelButton.Text = 'Cancel'
$cancelButton.Location = "153,215"

#adds to form
$folderForm.AcceptButton = $okButton
$folderForm.CancelButton = $cancelButton

#set the title of the form
$folderForm.Text = 'Folder Form'
#sets the form
$folderForm.ShowDialog()


#------------------------------------------------------------------Finished product
#region whole script
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
$folderForm = New-Object System.Windows.Forms.Form
$pathTextBox = New-Object System.Windows.Forms.TextBox
$selectButton = New-Object System.Windows.Forms.Button
$folderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog
$removeButton = New-Object System.Windows.Forms.Button
$okButton = New-Object System.Windows.Forms.Button
$cancelButton = New-Object System.Windows.Forms.Button

$pathTextBox.Location = '23,23'
$pathTextBox.Size = '150,23'
$pathTextBox.ReadOnly = $true

$selectButton.Text = 'Select'
$selectButton.Location = '196,23'
$selectButton.Add_Click({
    $folderBrowser.ShowDialog()
    $pathTextBox.Text = $folderBrowser.SelectedPath
})

$removeButton.Location = '26,52'
$removeButton.text = 'Remove'
$removeButton.Add_Click({
    If($folderBrowser.SelectedPath){
        If(Test-Path $folderBrowser.SelectedPath){
            Remove-Item $folderBrowser.SelectedPath
        }
    }
})

$okButton.Text = 'OK'
$okButton.Location = "56,215"

$cancelButton.Text = 'Cancel'
$cancelButton.Location = "153,215"

$folderForm.AcceptButton = $okButton
$folderForm.CancelButton = $cancelButton
$folderForm.Text = 'Folder Form'

$folderForm.Controls.Add($pathTextBox)
$folderForm.Controls.Add($selectButton)
$folderForm.Controls.Add($removeButton)
$folderForm.Controls.Add($okButton)
$folderForm.controls.Add($cancelButton)

$folderForm.ShowDialog()

#endregion

